services:
  postgres:
    image: postgres:latest
    container_name: microdata-db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - microdata_network

  pgadmin:
    image: dpage/pgadmin4
    container_name: microdata_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - microdata_network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      args:
        DATABASE_URL: ${DATABASE_URL}
    container_name: microdata_backend
    environment:
      NODE_ENV: development
      CORS_ORIGIN: ${CORS_ORIGIN}
      DB_HOST: postgres
      DB_USER: ${POSTGRES_USER}
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      DB_NAME: ${POSTGRES_DB}
    ports:
      - "5000:5000"
    volumes:
      - ./backend:/app
      - /app/node_modules
    depends_on:
      - postgres
    networks:
      - microdata_network
    entrypoint: ["/bin/sh", "-c", "npx prisma migrate dev --name init && npm start"]

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: microdata_frontend
    environment:
      REACT_APP_API_URL: ${REACT_APP_API_URL}
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - microdata_network

networks:
  microdata_network:
    driver: bridge

volumes:
  postgres_data:
